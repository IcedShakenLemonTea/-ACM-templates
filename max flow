//点的编号从0开始
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>
using namespace std;
const int MAXV=100002;//点数的最大值
const int MAXE=400010;//边数的最大值
const int inf=0x3f3f3f3f;
struct edge
{
    int to,nxt,cap,flow;
    edge(int a=-1,int b=-1,int c=-1)
    {
        to=a;
        cap=b;
        nxt=c;
        flow=0;
    }
}e[MAXE];
int head[MAXV],tol;
int d[MAXV],p[MAXV],gap[MAXV];
void init()
{
    tol=0;
    memset(head,-1,sizeof(head));
}

void addedge(int u,int v,int w)
{
    e[tol]=edge(v,w,head[u]);head[u]=tol++;
    e[tol]=edge(u,0,head[v]);head[v]=tol++;
}
int Q[MAXV];
void bfs(int s,int t)
{
    memset(d,-1,sizeof(d));
    memset(gap,0,sizeof(gap));
    gap[0]=1;
    int front=0,rear=0;
    d[t]=0;
    Q[rear++]=t;
    while(front!=rear)
    {
        int u=Q[front++];
        if(front==MAXV) front=0;
        for(int i=head[u];i!=-1;i=e[i].nxt)
        {
            int v=e[i].to;
            if(d[v]!=-1)continue;
            Q[rear++]=v;
            d[v]=d[u]+1;
            gap[d[v]]++;
        }
    }
}

int S[MAXV],cur[MAXV];
int maxflow(int s,int t,int N)
{
    bfs(s,t);
    memcpy(cur, head, sizeof(head));
    int top=0,u=s,ans=0;
    while(d[s]<N)
    {
        if(u==t)
        {
            int Min=inf,inser;
            for(int i=0;i<top;i++)
            {
                if(Min>e[S[i]].cap-e[S[i]].flow)
                {
                    Min=e[S[i]].cap-e[S[i]].flow;
                    inser=i;
                }
            }
            for(int i=0; i<top; i++)
            {
                e[S[i]].flow+=Min;
                e[S[i]^1].flow-=Min;
            }
            ans+=Min;
            top=inser;
            u=e[S[top]^1].to;
            continue;
        }
        if(u!=t&&gap[d[u]-1]==0) break;
        bool ok=false;
        int v;
        for(int i=cur[u];i!=-1;i=e[i].nxt)
        {
            v=e[i].to;
            if(e[i].cap-e[i].flow && d[v]+1==d[u])
            {
                ok=true;
                cur[u]=i;
                break;
            }
        }
        if(ok)
        {
            S[top++]=cur[u];
            u=v;
            continue;
        }
        int Min=N;
        for(int i=head[u];i!=-1;i=e[i].nxt)
        {
            if(e[i].cap-e[i].flow&&d[e[i].to]<Min)
            {
                Min=d[e[i].to];
                cur[u]=i;
            }
        }
        gap[d[u]]--;
        if(!gap[d[u]]) return ans;
        d[u]=Min+1;
        gap[d[u]]++;
        if(u!=s) u=e[S[--top]^1].to;
    }
    return ans;
}
int main()
{
	freopen("2.txt", "r", stdin);
    int T;
    scanf("%d",&T);
    while(T--)
    {
    	init();
    	int n,m;
    	scanf("%d%d",&n,&m);
    	int s,t;
    	for(int i=0;i<m;++i)
    	{
    		int u,v,w;
    		scanf("%d%d%d",&u,&v,&w);
    		addedge(u,v,w);
    	}
    	printf("%d\n",maxflow(s,t,n));
    }
    return 0;
}
