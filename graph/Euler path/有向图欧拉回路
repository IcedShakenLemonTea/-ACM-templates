//有向图欧拉回路
#include <bits/stdc++.h>
using namespace std;
int n,cnt,head[66666],in[66666],out[66666];
struct edge
{
	int to,nxt;
	bool use;
	edge(int a=-1,int b=-1) {to=a;nxt=b;use=false;}
}e[66666];
void addedge(int u,int v)
{
	e[cnt]=edge(v,head[u]);
	head[u]=cnt++;
}
int fa[66666];
int findset(int x)
{
	if(fa[x]==x) return x;
	else return fa[x]=findset(fa[x]);
}
void unionset(int x,int y)
{
	int fx=findset(x),fy=findset(y);
	if(fx!=fy) fa[fy]=fx;
}
bool check()
{
	for(int i=0;i<n;++i) 
	{
		fa[i]=i;
		if(in[i]!=out[i]) return false;
	}
	for(int i=0;i<n;++i)
		for(int p=head[i];p!=-1;p=e[p].nxt)	unionset(i,e[p].to);
	for(int i=1;i<n;++i) if(findset(i)!=findset(0)) return false;
	return true;
}
vector<int>pv;
void dfs(int u)  
{  
    for(int p=head[u];p!=-1;p=e[p].nxt)  
    {  
        if(e[p].use) continue; 
        e[p].use=true;	//删边 
        dfs(e[p].to);             
    }  
    pv.push_back(u);  
} 
void Euler_Circuit(int s)  
{
	pv.clear();
    dfs(s);
    int N=pv.size();
    for(int i=0;i<N-1;++i) cout<<pv[i]<<" ";
    cout<<endl;
}   
int main()
{
    //freopen("3.txt","r",stdin);
    int m;
    scanf("%d%d",&n,&m);
    cnt=0;
    memset(head,-1,sizeof(head));
    memset(in,-1,sizeof(in));
    memset(out,-1,sizeof(out));
    for(int i=0;i<m;++i)
    {
    	int u,v;
    	scanf("%d%d",&u,&v);
    	addedge(u,v);
    	out[u]++;
    	in[v]++;
    }
    if(check()) Euler_Circuit(0);
    else printf("Not Exsit Euler Circuit\n");
    return 0;
}
